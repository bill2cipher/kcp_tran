// Code generated by protoc-gen-go.
// source: msg/transfer.proto
// DO NOT EDIT!

/*
Package msg is a generated protocol buffer package.

It is generated from these files:
	msg/transfer.proto

It has these top-level messages:
	Transfer
	SendInit
	RecvInit
	SendPartial
	AskPartial
	Error
*/
package msg

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
const _ = proto.ProtoPackageIsVersion1

type Transfer struct {
	SendInit         *SendInit    `protobuf:"bytes,1,opt,name=send_init" json:"send_init,omitempty"`
	RecvInit         *RecvInit    `protobuf:"bytes,2,opt,name=recv_init" json:"recv_init,omitempty"`
	SendPartial      *SendPartial `protobuf:"bytes,3,opt,name=send_partial" json:"send_partial,omitempty"`
	AskPartial       *AskPartial  `protobuf:"bytes,4,opt,name=ask_partial" json:"ask_partial,omitempty"`
	Status           *Error       `protobuf:"bytes,5,opt,name=status" json:"status,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *Transfer) Reset()                    { *m = Transfer{} }
func (m *Transfer) String() string            { return proto.CompactTextString(m) }
func (*Transfer) ProtoMessage()               {}
func (*Transfer) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Transfer) GetSendInit() *SendInit {
	if m != nil {
		return m.SendInit
	}
	return nil
}

func (m *Transfer) GetRecvInit() *RecvInit {
	if m != nil {
		return m.RecvInit
	}
	return nil
}

func (m *Transfer) GetSendPartial() *SendPartial {
	if m != nil {
		return m.SendPartial
	}
	return nil
}

func (m *Transfer) GetAskPartial() *AskPartial {
	if m != nil {
		return m.AskPartial
	}
	return nil
}

func (m *Transfer) GetStatus() *Error {
	if m != nil {
		return m.Status
	}
	return nil
}

type SendInit struct {
	Total            *uint32 `protobuf:"varint,1,req,name=total" json:"total,omitempty"`
	Block            *uint32 `protobuf:"varint,2,req,name=block" json:"block,omitempty"`
	Cnt              *uint32 `protobuf:"varint,3,req,name=cnt" json:"cnt,omitempty"`
	Name             *string `protobuf:"bytes,4,req,name=name" json:"name,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *SendInit) Reset()                    { *m = SendInit{} }
func (m *SendInit) String() string            { return proto.CompactTextString(m) }
func (*SendInit) ProtoMessage()               {}
func (*SendInit) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *SendInit) GetTotal() uint32 {
	if m != nil && m.Total != nil {
		return *m.Total
	}
	return 0
}

func (m *SendInit) GetBlock() uint32 {
	if m != nil && m.Block != nil {
		return *m.Block
	}
	return 0
}

func (m *SendInit) GetCnt() uint32 {
	if m != nil && m.Cnt != nil {
		return *m.Cnt
	}
	return 0
}

func (m *SendInit) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

type RecvInit struct {
	Name             *string `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	Total            *uint32 `protobuf:"varint,2,req,name=total" json:"total,omitempty"`
	Block            *uint32 `protobuf:"varint,3,req,name=block" json:"block,omitempty"`
	Cnt              *uint32 `protobuf:"varint,4,req,name=cnt" json:"cnt,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *RecvInit) Reset()                    { *m = RecvInit{} }
func (m *RecvInit) String() string            { return proto.CompactTextString(m) }
func (*RecvInit) ProtoMessage()               {}
func (*RecvInit) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *RecvInit) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *RecvInit) GetTotal() uint32 {
	if m != nil && m.Total != nil {
		return *m.Total
	}
	return 0
}

func (m *RecvInit) GetBlock() uint32 {
	if m != nil && m.Block != nil {
		return *m.Block
	}
	return 0
}

func (m *RecvInit) GetCnt() uint32 {
	if m != nil && m.Cnt != nil {
		return *m.Cnt
	}
	return 0
}

type SendPartial struct {
	Index            *uint32 `protobuf:"varint,1,req,name=index" json:"index,omitempty"`
	Data             []byte  `protobuf:"bytes,2,req,name=data" json:"data,omitempty"`
	Checksum         []byte  `protobuf:"bytes,3,req,name=checksum" json:"checksum,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *SendPartial) Reset()                    { *m = SendPartial{} }
func (m *SendPartial) String() string            { return proto.CompactTextString(m) }
func (*SendPartial) ProtoMessage()               {}
func (*SendPartial) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *SendPartial) GetIndex() uint32 {
	if m != nil && m.Index != nil {
		return *m.Index
	}
	return 0
}

func (m *SendPartial) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *SendPartial) GetChecksum() []byte {
	if m != nil {
		return m.Checksum
	}
	return nil
}

type AskPartial struct {
	Index            []uint32 `protobuf:"varint,1,rep,name=index" json:"index,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *AskPartial) Reset()                    { *m = AskPartial{} }
func (m *AskPartial) String() string            { return proto.CompactTextString(m) }
func (*AskPartial) ProtoMessage()               {}
func (*AskPartial) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *AskPartial) GetIndex() []uint32 {
	if m != nil {
		return m.Index
	}
	return nil
}

type Error struct {
	Code             *uint32 `protobuf:"varint,1,req,name=code" json:"code,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Error) Reset()                    { *m = Error{} }
func (m *Error) String() string            { return proto.CompactTextString(m) }
func (*Error) ProtoMessage()               {}
func (*Error) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *Error) GetCode() uint32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return 0
}

func init() {
	proto.RegisterType((*Transfer)(nil), "msg.transfer")
	proto.RegisterType((*SendInit)(nil), "msg.send_init")
	proto.RegisterType((*RecvInit)(nil), "msg.recv_init")
	proto.RegisterType((*SendPartial)(nil), "msg.send_partial")
	proto.RegisterType((*AskPartial)(nil), "msg.ask_partial")
	proto.RegisterType((*Error)(nil), "msg.error")
}

var fileDescriptor0 = []byte{
	// 269 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x54, 0x90, 0xd1, 0x4e, 0x83, 0x30,
	0x14, 0x86, 0x03, 0xdd, 0xcc, 0x38, 0x80, 0x99, 0x4d, 0x4c, 0x88, 0xf1, 0x62, 0x92, 0x18, 0xb9,
	0xc2, 0xc4, 0x7b, 0xef, 0x7c, 0x0f, 0x53, 0x4b, 0x55, 0xc2, 0x68, 0x97, 0xf6, 0xcc, 0xf8, 0x70,
	0x3e, 0x9c, 0xed, 0xd9, 0x06, 0xe5, 0xf2, 0xfc, 0xe7, 0xe3, 0xe3, 0x3f, 0x05, 0x3e, 0xba, 0xaf,
	0x67, 0xb4, 0x42, 0xbb, 0x4f, 0x65, 0xdb, 0x83, 0x35, 0x68, 0x38, 0xf3, 0x59, 0xfd, 0x97, 0xc0,
	0xe6, 0x92, 0xf3, 0x07, 0xc8, 0x9c, 0xd2, 0xdd, 0x7b, 0xaf, 0x7b, 0xac, 0x92, 0x5d, 0xd2, 0xe4,
	0x2f, 0xd7, 0xad, 0xa7, 0xda, 0x29, 0x0d, 0x88, 0x55, 0xf2, 0xe7, 0x84, 0xa4, 0x11, 0x32, 0xa5,
	0xfc, 0x09, 0x0a, 0xe2, 0x0f, 0xc2, 0x62, 0x2f, 0xf6, 0x15, 0x23, 0xea, 0x66, 0x16, 0x9d, 0x17,
	0xfc, 0x11, 0x72, 0xe1, 0x86, 0x89, 0x5b, 0x11, 0xb7, 0x25, 0x2e, 0xca, 0xf9, 0x1d, 0x5c, 0x39,
	0x14, 0x78, 0x74, 0xd5, 0x9a, 0x08, 0x20, 0x42, 0x59, 0x6b, 0x6c, 0xfd, 0x16, 0x35, 0xe6, 0x25,
	0xac, 0xd1, 0xa0, 0x37, 0x25, 0xbb, 0xb4, 0x29, 0xc3, 0xf8, 0xb1, 0x37, 0x72, 0xf0, 0x35, 0xc3,
	0x98, 0x03, 0x93, 0x1a, 0x7d, 0x9b, 0x30, 0x14, 0xb0, 0xd2, 0x62, 0x54, 0xfe, 0x9f, 0x69, 0x93,
	0x05, 0xcb, 0x5c, 0xff, 0xb2, 0x0a, 0x92, 0x6c, 0x76, 0xa6, 0x4b, 0x27, 0x8b, 0x9d, 0xc1, 0x52,
	0xd6, 0xaf, 0xcb, 0xbb, 0x03, 0xdb, 0xeb, 0x4e, 0xfd, 0x9e, 0xeb, 0x78, 0x6f, 0x27, 0x50, 0x90,
	0xa8, 0xe0, 0x5b, 0xd8, 0xc8, 0x6f, 0x25, 0x07, 0x77, 0x1c, 0xc9, 0x55, 0xd4, 0xf7, 0x8b, 0xd7,
	0x88, 0xbf, 0x66, 0x5e, 0x7e, 0x0b, 0x6b, 0xba, 0x38, 0x68, 0xa4, 0xe9, 0x4e, 0xf5, 0xca, 0xff,
	0x00, 0x00, 0x00, 0xff, 0xff, 0x11, 0xe9, 0x0c, 0xab, 0xd8, 0x01, 0x00, 0x00,
}
