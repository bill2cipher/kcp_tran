// Code generated by protoc-gen-go.
// source: msg/transfer.proto
// DO NOT EDIT!

/*
Package transfer is a generated protocol buffer package.

It is generated from these files:
	msg/transfer.proto

It has these top-level messages:
	Transfer
	TransferRp
	SendInit
	SendInitRp
	SendPartial
	SendPartialRp
	SendFinish
	SendFinishRp
	RecvInit
	RecvInitRp
*/
package msg

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
const _ = proto.ProtoPackageIsVersion1

type Transfer struct {
	SendInit         *SendInit    `protobuf:"bytes,1,opt,name=send_init" json:"send_init,omitempty"`
	SendPartial      *SendPartial `protobuf:"bytes,2,opt,name=send_partial" json:"send_partial,omitempty"`
	SendFinish       *SendFinish  `protobuf:"bytes,3,opt,name=send_finish" json:"send_finish,omitempty"`
	RecvInit         *RecvInit    `protobuf:"bytes,4,opt,name=recv_init" json:"recv_init,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *Transfer) Reset()                    { *m = Transfer{} }
func (m *Transfer) String() string            { return proto.CompactTextString(m) }
func (*Transfer) ProtoMessage()               {}
func (*Transfer) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Transfer) GetSendInit() *SendInit {
	if m != nil {
		return m.SendInit
	}
	return nil
}

func (m *Transfer) GetSendPartial() *SendPartial {
	if m != nil {
		return m.SendPartial
	}
	return nil
}

func (m *Transfer) GetSendFinish() *SendFinish {
	if m != nil {
		return m.SendFinish
	}
	return nil
}

func (m *Transfer) GetRecvInit() *RecvInit {
	if m != nil {
		return m.RecvInit
	}
	return nil
}

type TransferRp struct {
	SendInitRp       *SendInitRp    `protobuf:"bytes,1,opt,name=send_init_rp" json:"send_init_rp,omitempty"`
	SendPartialRp    *SendPartialRp `protobuf:"bytes,2,opt,name=send_partial_rp" json:"send_partial_rp,omitempty"`
	SendFinishRp     *SendFinishRp  `protobuf:"bytes,3,opt,name=send_finish_rp" json:"send_finish_rp,omitempty"`
	RecvInitRp       *RecvInitRp    `protobuf:"bytes,4,opt,name=recv_init_rp" json:"recv_init_rp,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *TransferRp) Reset()                    { *m = TransferRp{} }
func (m *TransferRp) String() string            { return proto.CompactTextString(m) }
func (*TransferRp) ProtoMessage()               {}
func (*TransferRp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *TransferRp) GetSendInitRp() *SendInitRp {
	if m != nil {
		return m.SendInitRp
	}
	return nil
}

func (m *TransferRp) GetSendPartialRp() *SendPartialRp {
	if m != nil {
		return m.SendPartialRp
	}
	return nil
}

func (m *TransferRp) GetSendFinishRp() *SendFinishRp {
	if m != nil {
		return m.SendFinishRp
	}
	return nil
}

func (m *TransferRp) GetRecvInitRp() *RecvInitRp {
	if m != nil {
		return m.RecvInitRp
	}
	return nil
}

type SendInit struct {
	Total            *uint32 `protobuf:"varint,1,req,name=total" json:"total,omitempty"`
	Block            *uint32 `protobuf:"varint,2,req,name=block" json:"block,omitempty"`
	Cnt              *uint32 `protobuf:"varint,3,req,name=cnt" json:"cnt,omitempty"`
	Name             *string `protobuf:"bytes,4,req,name=name" json:"name,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *SendInit) Reset()                    { *m = SendInit{} }
func (m *SendInit) String() string            { return proto.CompactTextString(m) }
func (*SendInit) ProtoMessage()               {}
func (*SendInit) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *SendInit) GetTotal() uint32 {
	if m != nil && m.Total != nil {
		return *m.Total
	}
	return 0
}

func (m *SendInit) GetBlock() uint32 {
	if m != nil && m.Block != nil {
		return *m.Block
	}
	return 0
}

func (m *SendInit) GetCnt() uint32 {
	if m != nil && m.Cnt != nil {
		return *m.Cnt
	}
	return 0
}

func (m *SendInit) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

type SendInitRp struct {
	Status           *uint32 `protobuf:"varint,1,req,name=status" json:"status,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *SendInitRp) Reset()                    { *m = SendInitRp{} }
func (m *SendInitRp) String() string            { return proto.CompactTextString(m) }
func (*SendInitRp) ProtoMessage()               {}
func (*SendInitRp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *SendInitRp) GetStatus() uint32 {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return 0
}

type SendPartial struct {
	Sequence         *uint32 `protobuf:"varint,1,req,name=sequence" json:"sequence,omitempty"`
	Size             *uint32 `protobuf:"varint,2,req,name=size" json:"size,omitempty"`
	Checksum         []byte  `protobuf:"bytes,3,opt,name=checksum" json:"checksum,omitempty"`
	Start            *uint32 `protobuf:"varint,4,req,name=start" json:"start,omitempty"`
	End              *uint32 `protobuf:"varint,5,req,name=end" json:"end,omitempty"`
	Content          []byte  `protobuf:"bytes,6,opt,name=content" json:"content,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *SendPartial) Reset()                    { *m = SendPartial{} }
func (m *SendPartial) String() string            { return proto.CompactTextString(m) }
func (*SendPartial) ProtoMessage()               {}
func (*SendPartial) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *SendPartial) GetSequence() uint32 {
	if m != nil && m.Sequence != nil {
		return *m.Sequence
	}
	return 0
}

func (m *SendPartial) GetSize() uint32 {
	if m != nil && m.Size != nil {
		return *m.Size
	}
	return 0
}

func (m *SendPartial) GetChecksum() []byte {
	if m != nil {
		return m.Checksum
	}
	return nil
}

func (m *SendPartial) GetStart() uint32 {
	if m != nil && m.Start != nil {
		return *m.Start
	}
	return 0
}

func (m *SendPartial) GetEnd() uint32 {
	if m != nil && m.End != nil {
		return *m.End
	}
	return 0
}

func (m *SendPartial) GetContent() []byte {
	if m != nil {
		return m.Content
	}
	return nil
}

type SendPartialRp struct {
	Sequence         *uint32 `protobuf:"varint,1,req,name=sequence" json:"sequence,omitempty"`
	Status           *uint32 `protobuf:"varint,2,req,name=status" json:"status,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *SendPartialRp) Reset()                    { *m = SendPartialRp{} }
func (m *SendPartialRp) String() string            { return proto.CompactTextString(m) }
func (*SendPartialRp) ProtoMessage()               {}
func (*SendPartialRp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *SendPartialRp) GetSequence() uint32 {
	if m != nil && m.Sequence != nil {
		return *m.Sequence
	}
	return 0
}

func (m *SendPartialRp) GetStatus() uint32 {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return 0
}

type SendFinish struct {
	Checksum         []byte `protobuf:"bytes,1,opt,name=checksum" json:"checksum,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *SendFinish) Reset()                    { *m = SendFinish{} }
func (m *SendFinish) String() string            { return proto.CompactTextString(m) }
func (*SendFinish) ProtoMessage()               {}
func (*SendFinish) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *SendFinish) GetChecksum() []byte {
	if m != nil {
		return m.Checksum
	}
	return nil
}

type SendFinishRp struct {
	Status           *uint32 `protobuf:"varint,1,req,name=status" json:"status,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *SendFinishRp) Reset()                    { *m = SendFinishRp{} }
func (m *SendFinishRp) String() string            { return proto.CompactTextString(m) }
func (*SendFinishRp) ProtoMessage()               {}
func (*SendFinishRp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *SendFinishRp) GetStatus() uint32 {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return 0
}

type RecvInit struct {
	Name             *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *RecvInit) Reset()                    { *m = RecvInit{} }
func (m *RecvInit) String() string            { return proto.CompactTextString(m) }
func (*RecvInit) ProtoMessage()               {}
func (*RecvInit) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *RecvInit) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

type RecvInitRp struct {
	Status           *uint32 `protobuf:"varint,1,req,name=status" json:"status,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *RecvInitRp) Reset()                    { *m = RecvInitRp{} }
func (m *RecvInitRp) String() string            { return proto.CompactTextString(m) }
func (*RecvInitRp) ProtoMessage()               {}
func (*RecvInitRp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *RecvInitRp) GetStatus() uint32 {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return 0
}

func init() {
	proto.RegisterType((*Transfer)(nil), "transfer.transfer")
	proto.RegisterType((*TransferRp)(nil), "transfer.transfer_rp")
	proto.RegisterType((*SendInit)(nil), "transfer.send_init")
	proto.RegisterType((*SendInitRp)(nil), "transfer.send_init_rp")
	proto.RegisterType((*SendPartial)(nil), "transfer.send_partial")
	proto.RegisterType((*SendPartialRp)(nil), "transfer.send_partial_rp")
	proto.RegisterType((*SendFinish)(nil), "transfer.send_finish")
	proto.RegisterType((*SendFinishRp)(nil), "transfer.send_finish_rp")
	proto.RegisterType((*RecvInit)(nil), "transfer.recv_init")
	proto.RegisterType((*RecvInitRp)(nil), "transfer.recv_init_rp")
}

var fileDescriptor0 = []byte{
	// 354 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x6c, 0x92, 0x5b, 0x4e, 0xf3, 0x30,
	0x10, 0x85, 0x95, 0xde, 0xfe, 0x76, 0xd2, 0xcb, 0x2f, 0x23, 0xaa, 0xf4, 0x05, 0x2a, 0x3f, 0xa0,
	0x0a, 0xa1, 0x82, 0xca, 0x16, 0xd8, 0x47, 0x15, 0x8c, 0x4b, 0xa3, 0x36, 0x4e, 0xb1, 0x1d, 0x1e,
	0x58, 0x17, 0xfb, 0x60, 0x4b, 0x78, 0x9c, 0xd4, 0x38, 0x6e, 0x1e, 0x4f, 0x66, 0xce, 0xcc, 0x37,
	0x27, 0x06, 0x92, 0xab, 0xf7, 0x47, 0x2d, 0x53, 0xa1, 0x76, 0x5c, 0xae, 0x4f, 0xb2, 0xd0, 0x05,
	0x19, 0x9e, 0x35, 0xfd, 0x8e, 0xc0, 0x09, 0x72, 0x07, 0x23, 0xc5, 0xc5, 0xdb, 0x36, 0x13, 0x99,
	0x4e, 0xa2, 0x65, 0xb4, 0x8a, 0x37, 0x57, 0x6b, 0x67, 0x75, 0x25, 0xf2, 0x00, 0x63, 0x2b, 0x4e,
	0xa9, 0xd4, 0x59, 0x7a, 0x4c, 0x3a, 0xb6, 0x75, 0x1e, 0xb4, 0xd6, 0x55, 0x72, 0x0f, 0xb1, 0xd5,
	0x3b, 0xe3, 0x55, 0xfb, 0xa4, 0x6b, 0x9b, 0xaf, 0x83, 0xe6, 0xaa, 0x88, 0x04, 0x92, 0xb3, 0xcf,
	0x8a, 0xa0, 0x17, 0x12, 0xb8, 0x12, 0xfd, 0x89, 0x20, 0x3e, 0x7f, 0xde, 0xca, 0x93, 0x23, 0xc2,
	0xa2, 0xd1, 0x35, 0xfc, 0xbc, 0x05, 0x1e, 0xbb, 0x37, 0x30, 0xf3, 0x09, 0xd1, 0x50, 0x9d, 0xb0,
	0x68, 0x3f, 0x01, 0x3d, 0x4f, 0x30, 0xf5, 0x40, 0xd1, 0x52, 0x1d, 0x92, 0xb4, 0x1e, 0x52, 0x33,
	0x39, 0x60, 0xec, 0xef, 0x85, 0x4c, 0x7e, 0x95, 0xbe, 0x78, 0xd9, 0x93, 0x09, 0xf4, 0x75, 0xa1,
	0x4d, 0xb2, 0xd1, 0xb2, 0xb3, 0x9a, 0xa0, 0x7c, 0x3d, 0x16, 0xec, 0x60, 0x28, 0x51, 0xc6, 0xd0,
	0x65, 0x42, 0x9b, 0xfd, 0x28, 0xc6, 0xd0, 0x13, 0x69, 0xce, 0xcd, 0xf4, 0xce, 0x6a, 0x44, 0x6f,
	0x9a, 0x39, 0x90, 0x29, 0x0c, 0x94, 0x4e, 0x75, 0xa9, 0xaa, 0x49, 0x34, 0x6f, 0xfe, 0x39, 0xf2,
	0x1f, 0x86, 0x8a, 0x7f, 0x94, 0x5c, 0x30, 0x5e, 0xef, 0x32, 0xf3, 0x54, 0xf6, 0xc5, 0xeb, 0x55,
	0xa6, 0xce, 0xf6, 0x9c, 0x1d, 0x54, 0x99, 0xdb, 0x7b, 0xc7, 0xc8, 0x62, 0x26, 0x4a, 0x6d, 0x17,
	0x5a, 0x16, 0x33, 0x2f, 0xe9, 0x5b, 0x31, 0x83, 0x7f, 0xac, 0x10, 0x9a, 0x1b, 0xb8, 0x01, 0x36,
	0xd3, 0xe7, 0x8b, 0xa0, 0x5b, 0x36, 0xfe, 0x31, 0xda, 0x9d, 0xf4, 0xb6, 0xf1, 0x5e, 0x1a, 0x08,
	0x91, 0x9d, 0xba, 0x0c, 0x7f, 0xc5, 0xc5, 0x99, 0x0b, 0xef, 0x19, 0xb9, 0x84, 0xd0, 0x6c, 0x13,
	0xf2, 0x73, 0x0f, 0xad, 0xbf, 0x01, 0x00, 0x00, 0xff, 0xff, 0xcb, 0x0c, 0xb5, 0x41, 0x2f, 0x03,
	0x00, 0x00,
}